<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MThe Blog</title>
  
  <subtitle>Blog House</subtitle>
  <link href="http://126hello.github.io/atom.xml" rel="self"/>
  
  <link href="http://126hello.github.io/"/>
  <updated>2024-07-13T09:49:53.748Z</updated>
  <id>http://126hello.github.io/</id>
  
  <author>
    <name>Mr XY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>告暑假xy书</title>
    <link href="http://126hello.github.io/posts/40724c7a.html"/>
    <id>http://126hello.github.io/posts/40724c7a.html</id>
    <published>2024-07-13T09:08:30.000Z</published>
    <updated>2024-07-13T09:49:53.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、事物的发展都是曲折的，但终点都是光明的"><a href="#一、事物的发展都是曲折的，但终点都是光明的" class="headerlink" title="一、事物的发展都是曲折的，但终点都是光明的"></a>一、事物的发展都是曲折的，但终点都是光明的</h1><h2 id="对于学习这件事情，我们应该接受一次次的打击，但我们不要放弃，因为学习这些知识注定会为我们带来收获。因此我们要在一次一次的实践中调整自己。"><a href="#对于学习这件事情，我们应该接受一次次的打击，但我们不要放弃，因为学习这些知识注定会为我们带来收获。因此我们要在一次一次的实践中调整自己。" class="headerlink" title="对于学习这件事情，我们应该接受一次次的打击，但我们不要放弃，因为学习这些知识注定会为我们带来收获。因此我们要在一次一次的实践中调整自己。"></a>对于学习这件事情，我们应该接受一次次的打击，但我们不要放弃，因为学习这些知识注定会为我们带来收获。因此我们要在一次一次的实践中调整自己。</h2><h1 id="二、物质决定了我们的意识，意识反作用于物质"><a href="#二、物质决定了我们的意识，意识反作用于物质" class="headerlink" title="二、物质决定了我们的意识，意识反作用于物质"></a>二、物质决定了我们的意识，意识反作用于物质</h1><h2 id="改造一个意识必定主要从物质方面入手，对意识进行改造，这样才能提高自己的认识水平，意识水平。手机娱乐的信息引起的我们人体内部的矛盾，在我这个阶段，必定需要从物质层面进行改造。这个自我的矛盾是人体想要娱乐与人体需要学习之间的矛盾，矛盾的主要方面是娱乐时间与学习时间的不平衡之间的矛盾。想要解决这个矛盾，我们分几个阶段"><a href="#改造一个意识必定主要从物质方面入手，对意识进行改造，这样才能提高自己的认识水平，意识水平。手机娱乐的信息引起的我们人体内部的矛盾，在我这个阶段，必定需要从物质层面进行改造。这个自我的矛盾是人体想要娱乐与人体需要学习之间的矛盾，矛盾的主要方面是娱乐时间与学习时间的不平衡之间的矛盾。想要解决这个矛盾，我们分几个阶段" class="headerlink" title="改造一个意识必定主要从物质方面入手，对意识进行改造，这样才能提高自己的认识水平，意识水平。手机娱乐的信息引起的我们人体内部的矛盾，在我这个阶段，必定需要从物质层面进行改造。这个自我的矛盾是人体想要娱乐与人体需要学习之间的矛盾，矛盾的主要方面是娱乐时间与学习时间的不平衡之间的矛盾。想要解决这个矛盾，我们分几个阶段"></a>改造一个意识必定主要从物质方面入手，对意识进行改造，这样才能提高自己的认识水平，意识水平。手机娱乐的信息引起的我们人体内部的矛盾，在我这个阶段，必定需要从物质层面进行改造。这个自我的矛盾是人体想要娱乐与人体需要学习之间的矛盾，矛盾的主要方面是娱乐时间与学习时间的不平衡之间的矛盾。想要解决这个矛盾，我们分几个阶段</h2><h2 id="："><a href="#：" class="headerlink" title="："></a>：</h2><h2 id="1、学习时间小于娱乐时间，在这个时间内，如果不能及时的发现，人体会无线的趋向娱乐，娱乐的时间会不断的增加，相对的，学习时间会不断的减少。这个时候，我们需要外部的工具的介入，比如：一些限制娱乐的工具，一些行为方法。"><a href="#1、学习时间小于娱乐时间，在这个时间内，如果不能及时的发现，人体会无线的趋向娱乐，娱乐的时间会不断的增加，相对的，学习时间会不断的减少。这个时候，我们需要外部的工具的介入，比如：一些限制娱乐的工具，一些行为方法。" class="headerlink" title="1、学习时间小于娱乐时间，在这个时间内，如果不能及时的发现，人体会无线的趋向娱乐，娱乐的时间会不断的增加，相对的，学习时间会不断的减少。这个时候，我们需要外部的工具的介入，比如：一些限制娱乐的工具，一些行为方法。"></a>1、学习时间小于娱乐时间，在这个时间内，如果不能及时的发现，人体会无线的趋向娱乐，娱乐的时间会不断的增加，相对的，学习时间会不断的减少。这个时候，我们需要外部的工具的介入，比如：一些限制娱乐的工具，一些行为方法。</h2><h2 id="2、学习时间与娱乐时间相差不多，在这个阶段，我们娱乐与学习的欲望的矛盾转换的因素会有很多，导致我们趋向对立的一边，这个时候的过渡阶段，是需要强大的定力，也需要很多的外部条件的影响，否则，个人会很焦虑痛苦。"><a href="#2、学习时间与娱乐时间相差不多，在这个阶段，我们娱乐与学习的欲望的矛盾转换的因素会有很多，导致我们趋向对立的一边，这个时候的过渡阶段，是需要强大的定力，也需要很多的外部条件的影响，否则，个人会很焦虑痛苦。" class="headerlink" title="2、学习时间与娱乐时间相差不多，在这个阶段，我们娱乐与学习的欲望的矛盾转换的因素会有很多，导致我们趋向对立的一边，这个时候的过渡阶段，是需要强大的定力，也需要很多的外部条件的影响，否则，个人会很焦虑痛苦。"></a>2、学习时间与娱乐时间相差不多，在这个阶段，我们娱乐与学习的欲望的矛盾转换的因素会有很多，导致我们趋向对立的一边，这个时候的过渡阶段，是需要强大的定力，也需要很多的外部条件的影响，否则，个人会很焦虑痛苦。</h2><h2 id="3、学习时间占优势，这个时候，人的焦虑和痛苦会转换成幸福和享受，我们会在一次次的沉浸中学习的忘记自我，也不会去关注娱乐的多少，这个时候人一定由一个坚定的目标来促使他进步的。"><a href="#3、学习时间占优势，这个时候，人的焦虑和痛苦会转换成幸福和享受，我们会在一次次的沉浸中学习的忘记自我，也不会去关注娱乐的多少，这个时候人一定由一个坚定的目标来促使他进步的。" class="headerlink" title="3、学习时间占优势，这个时候，人的焦虑和痛苦会转换成幸福和享受，我们会在一次次的沉浸中学习的忘记自我，也不会去关注娱乐的多少，这个时候人一定由一个坚定的目标来促使他进步的。"></a>3、学习时间占优势，这个时候，人的焦虑和痛苦会转换成幸福和享受，我们会在一次次的沉浸中学习的忘记自我，也不会去关注娱乐的多少，这个时候人一定由一个坚定的目标来促使他进步的。</h2><h2 id="我们正处在第一个阶段，需要外力的帮助以及自我的觉醒，"><a href="#我们正处在第一个阶段，需要外力的帮助以及自我的觉醒，" class="headerlink" title="我们正处在第一个阶段，需要外力的帮助以及自我的觉醒，"></a>我们正处在第一个阶段，需要外力的帮助以及自我的觉醒，</h2><h1 id="二、抓住事物的主要矛盾和主要矛盾的主要方面，调查事物的特殊性"><a href="#二、抓住事物的主要矛盾和主要矛盾的主要方面，调查事物的特殊性" class="headerlink" title="二、抓住事物的主要矛盾和主要矛盾的主要方面，调查事物的特殊性"></a>二、抓住事物的主要矛盾和主要矛盾的主要方面，调查事物的特殊性</h1><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><p>​          </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、事物的发展都是曲折的，但终点都是光明的&quot;&gt;&lt;a href=&quot;#一、事物的发展都是曲折的，但终点都是光明的&quot; class=&quot;headerlink&quot; title=&quot;一、事物的发展都是曲折的，但终点都是光明的&quot;&gt;&lt;/a&gt;一、事物的发展都是曲折的，但终点都是光明的&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>日常启发</title>
    <link href="http://126hello.github.io/posts/13b5dc3b.html"/>
    <id>http://126hello.github.io/posts/13b5dc3b.html</id>
    <published>2024-05-19T13:03:28.000Z</published>
    <updated>2024-07-13T11:14:20.026Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、神即理，道法自然，如来"><a href="#一、神即理，道法自然，如来" class="headerlink" title="一、神即理，道法自然，如来"></a>一、神即理，道法自然，如来</h5><p>算是一个至简的概括了基督，道家，佛家的思想了，我无法体悟其中的道，理，如来，于我而言它是如此的简单，但却不妨碍他的深刻。</p><h5 id="二、文化属性"><a href="#二、文化属性" class="headerlink" title="二、文化属性"></a>二、文化属性</h5><p>我们国家的文化究竟是一种怎么样的文化，为什么在《天道》里面它被称作是一种弱势的文化，</p><p>在格律诗的公司发展的过程中，我看到的是一个通过一个人丁元英的名誉杠杆，让一件事情忙中有序，一步步得到解决问题。这其中最最关键的是他是一个天才，他给大家都带来了他们想要的利益，商业上说没有永远的朋友与敌人，只有永远的利益，而我看来，丁元英以自己的才华撬动了所有他身边的资本，他的商业头脑是真正的武器，谁也夺不走。</p><p>“这种文化只会让我们直不起腰来”，干事情畏首畏尾，考虑世俗的成见，为父母无限的有一种歉疚感，这种深入中国人骨髓里的百善孝为先真的带来了很多的矛盾与纠葛。我作为一个个体出现在这个世界上，首要目的是生存，其次是考虑实现自己的人生价值，母爱的抚养应该是本能，反哺也是，我们不因以任何目的在道德的最高点绑架任何人，因为谈及道德，那他已经被玷污了，就像谈及你是一个守法的人，你已经是一个触及底线的人了。</p><p>那么什么是弱势文化 ：短视，势利，懦弱逃避，</p><h1 id="小收获与大收获（量变与质变）"><a href="#小收获与大收获（量变与质变）" class="headerlink" title="小收获与大收获（量变与质变）"></a>小收获与大收获（量变与质变）</h1><h2 id="在我的学习过程中，我们常常把一个任务背后的收获看的太小了，的确，在一个大背景下，任何一个小阶段都那么微不足道，但是他们同样的重要，某种意义上来看，他是决定着大收获的，即量变的积累达成质变，量变是必不可少的小收获，质变是激动人心的大收获。二者缺一不可，这就是为什么我们必须重视平时的一点点小目标；从我们的学习的矛盾面（目前我们学习的最大矛盾事物就是娱乐时间），在微小方面对娱乐的认可，这些微小的量变最终必定会有质变的时候，这是我们需要关注的，微小的即是庞大的，庞大的就是微小的。"><a href="#在我的学习过程中，我们常常把一个任务背后的收获看的太小了，的确，在一个大背景下，任何一个小阶段都那么微不足道，但是他们同样的重要，某种意义上来看，他是决定着大收获的，即量变的积累达成质变，量变是必不可少的小收获，质变是激动人心的大收获。二者缺一不可，这就是为什么我们必须重视平时的一点点小目标；从我们的学习的矛盾面（目前我们学习的最大矛盾事物就是娱乐时间），在微小方面对娱乐的认可，这些微小的量变最终必定会有质变的时候，这是我们需要关注的，微小的即是庞大的，庞大的就是微小的。" class="headerlink" title="在我的学习过程中，我们常常把一个任务背后的收获看的太小了，的确，在一个大背景下，任何一个小阶段都那么微不足道，但是他们同样的重要，某种意义上来看，他是决定着大收获的，即量变的积累达成质变，量变是必不可少的小收获，质变是激动人心的大收获。二者缺一不可，这就是为什么我们必须重视平时的一点点小目标；从我们的学习的矛盾面（目前我们学习的最大矛盾事物就是娱乐时间），在微小方面对娱乐的认可，这些微小的量变最终必定会有质变的时候，这是我们需要关注的，微小的即是庞大的，庞大的就是微小的。"></a>在我的学习过程中，我们常常把一个任务背后的收获看的太小了，的确，在一个大背景下，任何一个小阶段都那么微不足道，但是他们同样的重要，某种意义上来看，他是决定着大收获的，即量变的积累达成质变，量变是必不可少的小收获，质变是激动人心的大收获。二者缺一不可，这就是为什么我们必须重视平时的一点点小目标；从我们的学习的矛盾面（目前我们学习的最大矛盾事物就是娱乐时间），在微小方面对娱乐的认可，这些微小的量变最终必定会有质变的时候，这是我们需要关注的，微小的即是庞大的，庞大的就是微小的。</h2><h2 id="微小事物对人的吸引力常常被我们忽视，但你仔细想一想他们，你应该觉得你达成的目标并不是微不足道的事情，当你去臆想事物完成后你所获得的东西的时候，其实事物完成的成就感从这个时候就已经起到了很大的作用，所以，在一件小目标之中，预测其完成后的结果是很让人鼓舞的；相反的，预测一个娱乐活动的结果，也会让人们有一些的反思。"><a href="#微小事物对人的吸引力常常被我们忽视，但你仔细想一想他们，你应该觉得你达成的目标并不是微不足道的事情，当你去臆想事物完成后你所获得的东西的时候，其实事物完成的成就感从这个时候就已经起到了很大的作用，所以，在一件小目标之中，预测其完成后的结果是很让人鼓舞的；相反的，预测一个娱乐活动的结果，也会让人们有一些的反思。" class="headerlink" title="微小事物对人的吸引力常常被我们忽视，但你仔细想一想他们，你应该觉得你达成的目标并不是微不足道的事情，当你去臆想事物完成后你所获得的东西的时候，其实事物完成的成就感从这个时候就已经起到了很大的作用，所以，在一件小目标之中，预测其完成后的结果是很让人鼓舞的；相反的，预测一个娱乐活动的结果，也会让人们有一些的反思。"></a>微小事物对人的吸引力常常被我们忽视，但你仔细想一想他们，你应该觉得你达成的目标并不是微不足道的事情，当你去臆想事物完成后你所获得的东西的时候，其实事物完成的成就感从这个时候就已经起到了很大的作用，所以，在一件小目标之中，预测其完成后的结果是很让人鼓舞的；相反的，预测一个娱乐活动的结果，也会让人们有一些的反思。</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;一、神即理，道法自然，如来&quot;&gt;&lt;a href=&quot;#一、神即理，道法自然，如来&quot; class=&quot;headerlink&quot; title=&quot;一、神即理，道法自然，如来&quot;&gt;&lt;/a&gt;一、神即理，道法自然，如来&lt;/h5&gt;&lt;p&gt;算是一个至简的概括了基督，道家，佛家的思想了，我无法</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Oj算法实践</title>
    <link href="http://126hello.github.io/posts/8191dd8a.html"/>
    <id>http://126hello.github.io/posts/8191dd8a.html</id>
    <published>2024-04-29T11:00:57.000Z</published>
    <updated>2024-05-28T09:03:29.046Z</updated>
    
    <content type="html"><![CDATA[<p>一、关于解决区间重复问题</p><p>问题与方案</p><p>1、<strong>用排序来解决区间多块的问题</strong></p><p>2、<strong>如何书写qsort函数</strong></p><p>3、<strong>使用结构体</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义区间结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> start;</span><br><span class="line">    <span class="type">int</span> end;</span><br><span class="line">&#125; Interval;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较函数，用于qsort</span></span><br><span class="line"><span class="comment">//将start按从前到后排序</span></span><br><span class="line"><span class="comment">//为什么这么排，是为了一个问题，当你的覆盖区域有两块怎么办，</span></span><br><span class="line"><span class="comment">//用这个方法有效排除这种可能，</span></span><br><span class="line"><span class="comment">//排序的力量！！！</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compareInterval</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    Interval *ia = (Interval *)a;</span><br><span class="line">    Interval *ib = (Interval *)b;</span><br><span class="line">    <span class="keyword">if</span> (ia-&gt;start != ib-&gt;start) &#123;</span><br><span class="line">        <span class="keyword">return</span> ia-&gt;start - ib-&gt;start;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ib-&gt;end - ia-&gt;end;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算未覆盖的路段长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">calculateUncoveredLength</span><span class="params">(<span class="type">int</span> L, Interval intervals[], <span class="type">int</span> M)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (M == <span class="number">0</span>) <span class="keyword">return</span> L;  <span class="comment">// 如果没有区间，则全部未覆盖</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对区间进行排序</span></span><br><span class="line">    qsort(intervals, M, <span class="keyword">sizeof</span>(Interval), compareInterval);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> coveredLength = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> currentStart = intervals[<span class="number">0</span>].start;</span><br><span class="line">    <span class="type">int</span> currentEnd = intervals[<span class="number">0</span>].end;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (intervals[i].start &gt; currentEnd) &#123;</span><br><span class="line">            <span class="comment">// 新的区间不与当前区间重叠</span></span><br><span class="line">            coveredLength += currentEnd - currentStart + <span class="number">1</span>;</span><br><span class="line">            currentStart = intervals[i].start;</span><br><span class="line">            currentEnd = intervals[i].end;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (intervals[i].end &gt; currentEnd) &#123;</span><br><span class="line">            <span class="comment">// 扩展当前区间的终点</span></span><br><span class="line">            currentEnd = intervals[i].end;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加上最后一个区间的覆盖长度</span></span><br><span class="line">    coveredLength += currentEnd - currentStart + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算未覆盖长度</span></span><br><span class="line">    <span class="keyword">return</span> L - coveredLength;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> L, M;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;L, &amp;M) != EOF) &#123;</span><br><span class="line">        Interval intervals[<span class="number">100</span>];  <span class="comment">// 存储区间的数组</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;intervals[i].start, &amp;intervals[i].end);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理函数，返回未覆盖的路段长度</span></span><br><span class="line">        <span class="type">int</span> uncoveredLength = calculateUncoveredLength(L, intervals, M);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, uncoveredLength+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> start;</span><br><span class="line">    <span class="type">int</span> end;</span><br><span class="line"></span><br><span class="line">&#125;Vector;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">qsort</span><span class="params">(Vector veca[],<span class="type">int</span> M)</span></span><br><span class="line">&#123;</span><br><span class="line">    Vector* Vec=veca;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;M;i++)</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;M<span class="number">-1</span>;j++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(Vec[j].start&gt;Vec[j+<span class="number">1</span>].start)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector temp=Vec[j];</span><br><span class="line">            Vec[j]=Vec[j+<span class="number">1</span>];</span><br><span class="line">            Vec[j+<span class="number">1</span>]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//主要函数，计算长度</span></span><br><span class="line"><span class="comment">//最大M，vector，L</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Funtion</span><span class="params">(<span class="type">int</span> L,<span class="type">int</span> M,Vector* vec)</span></span><br><span class="line">&#123;</span><br><span class="line">    qsort(vec,M);</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> Linestart=vec[<span class="number">0</span>].start;</span><br><span class="line">    <span class="type">int</span> LineEnd=vec[<span class="number">0</span>].end;</span><br><span class="line">    <span class="comment">//有了第一区间，开始加减</span></span><br><span class="line">    <span class="type">int</span> length=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;M;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vec[i].start&gt;vec[<span class="number">0</span>].end)</span><br><span class="line">        &#123;</span><br><span class="line">            length=LineEnd-Linestart+<span class="number">1</span>;</span><br><span class="line">            Linestart=vec[i].start;</span><br><span class="line">            LineEnd=vec[i].end;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vec[i].end&gt;vec[<span class="number">0</span>].end)</span><br><span class="line">            LineEnd=vec[i].end;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">       length=length+LineEnd-Linestart+<span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> L-length+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> M=<span class="number">0</span>,L=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;L,&amp;M)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//输入</span></span><br><span class="line">        Vector vec[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;M;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;vec[i].start,&amp;vec[i].end);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> n=Funtion(L,M,vec);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">利用辗转相除的方法求出最大公约数</span><br><span class="line">a&gt;b</span><br><span class="line">c=a%b</span><br><span class="line">向右轮换直到c==0</span><br><span class="line"></span><br><span class="line">int gcd(int a,int b)&#123;</span><br><span class="line">int c;</span><br><span class="line">if(a&lt;b)&#123;c=a;a=b;b=c;&#125;//a&gt;b</span><br><span class="line">while(c=a%b)&#123;</span><br><span class="line">a=b;b=c;</span><br><span class="line">&#125;</span><br><span class="line">return b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、关于解决区间重复问题&lt;/p&gt;
&lt;p&gt;问题与方案&lt;/p&gt;
&lt;p&gt;1、&lt;strong&gt;用排序来解决区间多块的问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;strong&gt;如何书写qsort函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3、&lt;strong&gt;使用结构体&lt;/strong&gt;&lt;/</summary>
      
    
    
    
    
    <category term="算法" scheme="http://126hello.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Os</title>
    <link href="http://126hello.github.io/posts/ff3461b3.html"/>
    <id>http://126hello.github.io/posts/ff3461b3.html</id>
    <published>2024-04-27T12:28:38.000Z</published>
    <updated>2024-05-07T14:00:49.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p> 这篇博客用于记录实验项目一，记录遭遇的问题及解决方案，个人的收获等。作者认为这是一个具有挑战且很有意义的项目，<strong>实践才能最好的锻炼自己的头脑</strong>，不必太功利，不在乎问题的难度，就像你用三天来创建你的博客一样，坚持自己的兴趣，全身心的投入是多么让人幸福的事！（过去已经证明）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot; class=&quot;headerlink&quot; title=&quot;一、简介&quot;&gt;&lt;/a&gt;一、简介&lt;/h1&gt;&lt;p&gt; 这篇博客用于记录实验项目一，记录遭遇的问题及解决方案，个人的收获等。作者认为这是一个具有挑战且很有意义的项目，&lt;stron</summary>
      
    
    
    
    
    <category term="计算机" scheme="http://126hello.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>哲思录</title>
    <link href="http://126hello.github.io/posts/c0bbe990.html"/>
    <id>http://126hello.github.io/posts/c0bbe990.html</id>
    <published>2024-04-25T09:52:31.000Z</published>
    <updated>2024-05-05T14:14:27.320Z</updated>
    
    <content type="html"><![CDATA[<h3 id="哲学是什么？"><a href="#哲学是什么？" class="headerlink" title="哲学是什么？"></a>哲学是什么？</h3><p>哲学是人的思想的结晶。</p><h3 id="读了阳明心学，你有什么感觉？"><a href="#读了阳明心学，你有什么感觉？" class="headerlink" title="读了阳明心学，你有什么感觉？"></a>读了阳明心学，你有什么感觉？</h3><p>阳明心学是一个开创性的，针对焦虑的良药。她的强大是无可置疑的，因为在我读到的一些工具类书籍中，都有阳明学的影子。但她和哲学一样都太难让人听懂，让人实践出来了。</p><p>其实我也不能说读了阳明心学，只是了解了一番他的事迹，感慨他的挫折成败，被贬江西赣州说出了：“坡山中贼易，破心中贼难。”的确，心中的很多种种都是我们焦虑的来源，这种自我的</p><h3 id="命中注定"><a href="#命中注定" class="headerlink" title="命中注定"></a>命中注定</h3><p>你的容貌，智商，家庭，都不是一个人能轻易改变的，顺从命运的安排能帮你摆脱痛苦，这样一看提升自己的能力变得轻易而可行。。。</p><h3 id="无感04-5-02"><a href="#无感04-5-02" class="headerlink" title="无感04/5/02"></a>无感04/5/02</h3><p>我常常想保持对一个事物的不加情感的关注，但是这种不自觉的故意的思维是否已经违背了这种无感，反而是一种故作镇定，内心还是有一层波澜升起。当我们想要对一件事作出自己的评判时，往往会调动自己的刻板映像，但我们也知道不能以偏概全，不能用静止的眼光看世界，这是违背科学的认识的行为。</p><p>比如，我想要把对游戏的冲动无感化，不想要把游戏当成一个令人愉悦的事情，不想要上瘾，更想要做自己真的想做的事，这种心无杂念，近乎固执的专注于一件事情的状态是令人开心的。然而，人的心里是有缺陷的，习得性无助是一个很可怕的事情</p><p>[]: <a href="https://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A%A9">https://zh.wikipedia.org/wiki/%E7%BF%92%E5%BE%97%E6%80%A7%E5%A4%B1%E5%8A%A9</a></p><p>你要首先怀抱无所谓的心态，这个心态带给你的是无惧风险的勇气，不怕失败的毅力！！</p><h4 id="麦趣（出国：逃离内卷）"><a href="#麦趣（出国：逃离内卷）" class="headerlink" title="麦趣（出国：逃离内卷）"></a>麦趣（出国：逃离内卷）</h4><p>学历建议：要读就到博士</p><p>还是靠自己</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;哲学是什么？&quot;&gt;&lt;a href=&quot;#哲学是什么？&quot; class=&quot;headerlink&quot; title=&quot;哲学是什么？&quot;&gt;&lt;/a&gt;哲学是什么？&lt;/h3&gt;&lt;p&gt;哲学是人的思想的结晶。&lt;/p&gt;
&lt;h3 id=&quot;读了阳明心学，你有什么感觉？&quot;&gt;&lt;a href=&quot;#读了阳明</summary>
      
    
    
    
    
    <category term="哲学" scheme="http://126hello.github.io/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>我写博客的原因</title>
    <link href="http://126hello.github.io/posts/b8167d5a.html"/>
    <id>http://126hello.github.io/posts/b8167d5a.html</id>
    <published>2024-04-24T12:00:47.000Z</published>
    <updated>2024-05-19T13:11:47.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="s首先写一个写博客常常用到的一些HEXO命令"><a href="#s首先写一个写博客常常用到的一些HEXO命令" class="headerlink" title="s首先写一个写博客常常用到的一些HEXO命令"></a>s首先写一个写博客常常用到的一些HEXO命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">*打开博客三件套</span><br><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">&#123;% btn &#x27;https://blog.anheyu.com/posts/d50a.html&#x27;,AnZhiYu,anzhiyufont anzhiyu-icon-circle-arrow-right %&#125;</span><br><span class="line"></span><br><span class="line">//上传Github</span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line">//想换背景在butterfly中搜background：url（）</span><br><span class="line"></span><br><span class="line">//更新追番</span><br><span class="line">hexo bangumi</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="今天先到这里，搞了三天终于搭建了自己的博客-win！！happy"><a href="#今天先到这里，搞了三天终于搭建了自己的博客-win！！happy" class="headerlink" title="今天先到这里，搞了三天终于搭建了自己的博客 win！！happy"></a>今天先到这里，搞了三天终于搭建了自己的博客 win！！happy</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;s首先写一个写博客常常用到的一些HEXO命令&quot;&gt;&lt;a href=&quot;#s首先写一个写博客常常用到的一些HEXO命令&quot; class=&quot;headerlink&quot; title=&quot;s首先写一个写博客常常用到的一些HEXO命令&quot;&gt;&lt;/a&gt;s首先写一个写博客常常用到的一些HEXO</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://126hello.github.io/posts/4a17b156.html"/>
    <id>http://126hello.github.io/posts/4a17b156.html</id>
    <published>2024-04-23T13:59:59.028Z</published>
    <updated>2024-04-24T07:09:34.582Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
